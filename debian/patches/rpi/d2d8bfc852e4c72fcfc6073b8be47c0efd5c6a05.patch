From d2d8bfc852e4c72fcfc6073b8be47c0efd5c6a05 Mon Sep 17 00:00:00 2001
From: spl <simon@raspberrypi.org>
Date: Wed, 6 Jul 2016 15:34:08 +0100
Subject: [PATCH] Rounded corners added to windows.

---
 obrender/theme.c      |   5 ++
 obrender/theme.h      |   3 ++
 openbox/frame.c       | 141 ++++++++++++++++++++++++++++++++++++++++++--------
 openbox/frame.h       |   8 +++
 openbox/framerender.c |  88 +++++++++++++++++++++++++++++++
 5 files changed, 224 insertions(+), 21 deletions(-)

diff --git a/obrender/theme.c b/obrender/theme.c
index 87ca5c8..92565a6 100644
--- a/obrender/theme.c
+++ b/obrender/theme.c
@@ -270,6 +270,7 @@ RrTheme* RrThemeNew(const RrInstance *inst, const gchar *name,
              theme->paddingx);
     READ_INT("window.client.padding.height", theme->cbwidthy, 0, 100,
              theme->cbwidthx);
+    READ_INT("window.corner.width", theme->window_corner_width, 0, 3, 0);
 
     /* load colors */
     READ_COLOR_("window.active.border.color", "border.color",
@@ -422,6 +423,10 @@ RrTheme* RrThemeNew(const RrInstance *inst, const gchar *name,
                RrColorCopy(theme->titlebut_focused_pressed_color));
     READ_COLOR("osd.button.focused.box.color", theme->osd_focused_lineart,
                RrColorCopy(theme->titlebut_hover_focused_color));
+    READ_COLOR("window.active.title.bg.color", theme->window_active_title_bg_color,
+               RrColorNew(inst, 0, 0, 0));
+    READ_COLOR("window.inactive.title.bg.color", theme->window_inactive_title_bg_color,
+               RrColorNew(inst, 0, 0, 0));
  
     /* load the image masks */
 
diff --git a/obrender/theme.h b/obrender/theme.h
index eb9ac3f..9f223ae 100644
--- a/obrender/theme.h
+++ b/obrender/theme.h
@@ -62,6 +62,7 @@ struct _RrTheme {
     gint grip_width;
     gint menu_title_label_height;
     gint menu_title_height;
+    gint window_corner_width;
 
     /* style settings - colors */
     RrColor *menu_border_color;
@@ -123,6 +124,8 @@ struct _RrTheme {
     gchar    menu_text_disabled_shadow_alpha;
     RrColor *menu_text_disabled_selected_shadow_color;
     gchar    menu_text_disabled_selected_shadow_alpha;
+    RrColor *window_active_title_bg_color;
+    RrColor *window_inactive_title_bg_color;
 
     /* style settings - pics */
     RrPixel32 *def_win_icon; /* RGBA */
diff --git a/openbox/frame.c b/openbox/frame.c
index 3dbcf12..1f70976 100644
--- a/openbox/frame.c
+++ b/openbox/frame.c
@@ -176,6 +176,13 @@ ObFrame *frame_new(ObClient *client)
     self->rgriptop = createWindow(self->window, NULL, mask, &attrib);
     self->rgripbottom = createWindow(self->window, NULL, mask, &attrib);
 
+    self->outerleft = createWindow(self->window, NULL, mask, &attrib);
+    self->outerright = createWindow(self->window, NULL, mask, &attrib);
+    self->outertop = createWindow(self->window, NULL, mask, &attrib);
+    self->outerbottom = createWindow(self->window, NULL, mask, &attrib);
+    self->outerlefttop = createWindow(self->window, NULL, mask, &attrib);
+    self->outerrighttop = createWindow(self->window, NULL, mask, &attrib);
+
     self->focused = FALSE;
 
     /* the other stuff is shown based on decor settings */
@@ -376,10 +383,15 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
         self->width = MAX(self->width,
                           (ob_rr_theme->grip_width + self->bwidth) * 2 + 1);
 
+        if (self->decorations & OB_FRAME_DECOR_TITLEBAR)
+            self->outer = ob_rr_theme->window_corner_width ? ob_rr_theme->window_corner_width + 1 : 0;
+        else
+            self->outer = 0;
+
         STRUT_SET(self->size,
-                  self->cbwidth_l + (!self->max_horz ? self->bwidth : 0),
+                  self->cbwidth_l + (!self->max_horz ? self->bwidth : 0) + self->outer,
                   self->cbwidth_t +
-                  (!self->max_horz || !self->max_vert ? self->bwidth : 0),
+                  (!self->max_horz || !self->max_vert ? self->bwidth : 0) + self->outer,
                   self->cbwidth_r + (!self->max_horz ? self->bwidth : 0),
                   self->cbwidth_b +
                   (!self->max_horz || !self->max_vert ? self->bwidth : 0));
@@ -499,32 +511,32 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                 titlesides = (!self->max_horz ? ob_rr_theme->grip_width : 0);
 
                 XMoveResizeWindow(obt_display, self->titletop,
-                                  ob_rr_theme->grip_width + self->bwidth, 0,
+                                  ob_rr_theme->grip_width + self->bwidth + self->outer, self->outer,
                                   /* width + bwidth*2 - bwidth*2 - grips*2 */
                                   self->width - ob_rr_theme->grip_width * 2,
                                   self->bwidth);
                 XMoveResizeWindow(obt_display, self->titletopleft,
-                                  0, 0,
+                                  self->outer, self->outer,
                                   ob_rr_theme->grip_width + self->bwidth,
                                   self->bwidth);
                 XMoveResizeWindow(obt_display, self->titletopright,
                                   self->client->area.width +
                                   self->size.left + self->size.right -
                                   ob_rr_theme->grip_width - self->bwidth,
-                                  0,
+                                  self->outer,
                                   ob_rr_theme->grip_width + self->bwidth,
                                   self->bwidth);
 
                 if (titlesides > 0) {
                     XMoveResizeWindow(obt_display, self->titleleft,
-                                      0, self->bwidth,
+                                      self->outer, self->bwidth + self->outer,
                                       self->bwidth,
                                       titlesides);
                     XMoveResizeWindow(obt_display, self->titleright,
                                       self->client->area.width +
                                       self->size.left + self->size.right -
                                       self->bwidth,
-                                      self->bwidth,
+                                      self->bwidth + self->outer,
                                       self->bwidth,
                                       titlesides);
 
@@ -541,8 +553,8 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
 
                 if (self->decorations & OB_FRAME_DECOR_TITLEBAR) {
                     XMoveResizeWindow(obt_display, self->titlebottom,
-                                      (self->max_horz ? 0 : self->bwidth),
-                                      ob_rr_theme->title_height + self->bwidth,
+                                      (self->max_horz ? 0 : self->bwidth) + self->outer,
+                                      ob_rr_theme->title_height + self->bwidth + self->outer,
                                       self->width,
                                       self->bwidth);
 
@@ -561,8 +573,8 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
 
             if (self->decorations & OB_FRAME_DECOR_TITLEBAR) {
                 XMoveResizeWindow(obt_display, self->title,
-                                  (self->max_horz ? 0 : self->bwidth),
-                                  self->bwidth,
+                                  (self->max_horz ? 0 : self->bwidth) + self->outer,
+                                  self->bwidth + self->outer,
                                   self->width, ob_rr_theme->title_height);
 
                 XMapWindow(obt_display, self->title);
@@ -607,7 +619,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
             if (self->bwidth && self->size.bottom) {
                 XMoveResizeWindow(obt_display, self->handlebottom,
                                   ob_rr_theme->grip_width +
-                                  self->bwidth + sidebwidth,
+                                  self->bwidth + sidebwidth + self->outer,
                                   self->size.top + self->client->area.height +
                                   self->size.bottom - self->bwidth,
                                   self->width - (ob_rr_theme->grip_width +
@@ -617,7 +629,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
 
                 if (sidebwidth) {
                     XMoveResizeWindow(obt_display, self->lgripleft,
-                                      0,
+                                      self->outer,
                                       self->size.top +
                                       self->client->area.height +
                                       self->size.bottom -
@@ -651,7 +663,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                 }
 
                 XMoveResizeWindow(obt_display, self->lgripbottom,
-                                  sidebwidth,
+                                  sidebwidth + self->outer,
                                   self->size.top + self->client->area.height +
                                   self->size.bottom - self->bwidth,
                                   ob_rr_theme->grip_width + self->bwidth,
@@ -674,7 +686,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                 {
                     XMoveResizeWindow(obt_display, self->handletop,
                                       ob_rr_theme->grip_width +
-                                      self->bwidth + sidebwidth,
+                                      self->bwidth + sidebwidth + self->outer,
                                       FRAME_HANDLE_Y(self),
                                       self->width - (ob_rr_theme->grip_width +
                                                      sidebwidth) * 2,
@@ -696,7 +708,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                                           ob_rr_theme->handle_height);
 
                         XMoveResizeWindow(obt_display, self->lgriptop,
-                                          sidebwidth,
+                                          sidebwidth + self->outer,
                                           FRAME_HANDLE_Y(self),
                                           ob_rr_theme->grip_width +
                                           self->bwidth,
@@ -748,7 +760,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                 ob_rr_theme->handle_height > 0)
             {
                 XMoveResizeWindow(obt_display, self->handle,
-                                  sidebwidth,
+                                  sidebwidth + self->outer,
                                   FRAME_HANDLE_Y(self) + self->bwidth,
                                   self->width, ob_rr_theme->handle_height);
                 XMapWindow(obt_display, self->handle);
@@ -782,7 +794,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
                  self->size.bottom) > ob_rr_theme->grip_width * 2)
             {
                 XMoveResizeWindow(obt_display, self->left,
-                                  0,
+                                  self->outer,
                                   self->bwidth + ob_rr_theme->grip_width,
                                   self->bwidth,
                                   self->client->area.height +
@@ -799,7 +811,7 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
             {
                 XMoveResizeWindow(obt_display, self->right,
                                   self->client->area.width + self->cbwidth_l +
-                                  self->cbwidth_r + self->bwidth,
+                                  self->cbwidth_r + self->bwidth + self->outer,
                                   self->bwidth + ob_rr_theme->grip_width,
                                   self->bwidth,
                                   self->client->area.height +
@@ -810,6 +822,67 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
             } else
                 XUnmapWindow(obt_display, self->right);
 
+            if (self->decorations & OB_FRAME_DECOR_TITLEBAR)
+            {
+                XMoveResizeWindow (obt_display, self->outertop,
+                                  0,
+                                  0,
+                                  self->width + self->outer * 2,
+                                  self->outer);
+                XMapWindow (obt_display, self->outertop);
+
+                XMoveResizeWindow (obt_display, self->outerlefttop,
+                                  0,
+                                  self->outer,
+                                  self->outer,
+                                  ob_rr_theme->title_height + self->bwidth + self->bwidth);
+                XMapWindow (obt_display, self->outerlefttop);
+
+                XMoveResizeWindow (obt_display, self->outerrighttop,
+                                  self->client->area.width + self->cbwidth_l +
+                                  self->cbwidth_r + self->bwidth + self->bwidth + self->outer,
+                                  self->outer,
+                                  self->outer,
+                                  ob_rr_theme->title_height + self->bwidth + self->bwidth);
+                XMapWindow (obt_display, self->outerrighttop);
+
+                XMoveResizeWindow (obt_display, self->outerleft,
+                                  0,
+                                  ob_rr_theme->title_height + self->bwidth + self->bwidth + self->outer,
+                                  self->outer,
+                                  self->client->area.height +
+                                  self->size.top + self->size.bottom -
+                                  ob_rr_theme->title_height);
+                XMapWindow (obt_display, self->outerleft);
+
+                XMoveResizeWindow (obt_display, self->outerright,
+                                  self->client->area.width + self->cbwidth_l +
+                                  self->cbwidth_r + self->bwidth + self->bwidth + self->outer,
+                                  ob_rr_theme->title_height + self->bwidth + self->bwidth + self->outer,
+                                  self->outer,
+                                  self->client->area.height +
+                                  self->size.top + self->size.bottom -
+                                  ob_rr_theme->title_height);
+                XMapWindow (obt_display, self->outerright);
+
+                XMoveResizeWindow (obt_display, self->outerbottom,
+                                  0,
+                                  self->size.top + self->client->area.height +
+                                  self->size.bottom,
+                                  self->width + self->outer * 2,
+                                  self->outer);
+                XMapWindow (obt_display, self->outerbottom);
+            }
+            else
+            {
+                XUnmapWindow (obt_display, self->outertop);
+                XUnmapWindow (obt_display, self->outerlefttop);
+                XUnmapWindow (obt_display, self->outerrighttop);
+                XUnmapWindow (obt_display, self->outerleft);
+                XUnmapWindow (obt_display, self->outerright);
+                XUnmapWindow (obt_display, self->outerbottom);
+            }
+
             XMoveResizeWindow(obt_display, self->backback,
                               self->size.left, self->size.top,
                               self->client->area.width,
@@ -845,8 +918,8 @@ void frame_adjust_area(ObFrame *self, gboolean moved,
             XMoveResizeWindow(obt_display, self->window,
                               self->area.x,
                               self->area.y,
-                              self->area.width,
-                              self->area.height);
+                              self->area.width + self->outer,
+                              self->area.height + self->outer);
 
         /* when the client has StaticGravity, it likes to move around.
            also this correctly positions the client when it maps.
@@ -906,11 +979,13 @@ static void frame_adjust_cursors(ObFrame *self)
                              OB_CURSOR_NORTH : OB_CURSOR_NONE);
         XChangeWindowAttributes(obt_display, self->topresize, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->titletop, CWCursor, &a);
+        XChangeWindowAttributes(obt_display, self->outertop, CWCursor, &a);
         a.cursor = ob_cursor(r && topbot ? OB_CURSOR_SOUTH : OB_CURSOR_NONE);
         XChangeWindowAttributes(obt_display, self->handle, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->handletop, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->handlebottom, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->innerbottom, CWCursor, &a);
+        XChangeWindowAttributes(obt_display, self->outerbottom, CWCursor, &a);
 
         /* these ones change when shaded */
         a.cursor = ob_cursor(r ? (sh ? OB_CURSOR_WEST : OB_CURSOR_NORTHWEST) :
@@ -928,9 +1003,13 @@ static void frame_adjust_cursors(ObFrame *self)
 
         /* these ones are pretty static */
         a.cursor = ob_cursor(r ? OB_CURSOR_WEST : OB_CURSOR_NONE);
+        XChangeWindowAttributes(obt_display, self->outerleft, CWCursor, &a);
+        XChangeWindowAttributes(obt_display, self->outerlefttop, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->left, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->innerleft, CWCursor, &a);
         a.cursor = ob_cursor(r ? OB_CURSOR_EAST : OB_CURSOR_NONE);
+        XChangeWindowAttributes(obt_display, self->outerright, CWCursor, &a);
+        XChangeWindowAttributes(obt_display, self->outerrighttop, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->right, CWCursor, &a);
         XChangeWindowAttributes(obt_display, self->innerright, CWCursor, &a);
         a.cursor = ob_cursor(r ? OB_CURSOR_SOUTHWEST : OB_CURSOR_NONE);
@@ -958,6 +1037,8 @@ void frame_adjust_client_area(ObFrame *self)
     XMoveResizeWindow(obt_display, self->backfront, 0, 0,
                       self->client->area.width,
                       self->client->area.height);
+    self->need_render = TRUE;
+    framerender_frame(self);
 }
 
 void frame_adjust_state(ObFrame *self)
@@ -1058,6 +1139,12 @@ void frame_grab_client(ObFrame *self)
     window_add(&self->rgripright, CLIENT_AS_WINDOW(self->client));
     window_add(&self->rgriptop, CLIENT_AS_WINDOW(self->client));
     window_add(&self->rgripbottom, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outerleft, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outerright, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outertop, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outerbottom, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outerlefttop, CLIENT_AS_WINDOW(self->client));
+    window_add(&self->outerrighttop, CLIENT_AS_WINDOW(self->client));
 }
 
 static gboolean find_reparent(XEvent *e, gpointer data)
@@ -1130,6 +1217,12 @@ void frame_release_client(ObFrame *self)
     window_remove(self->rgripright);
     window_remove(self->rgriptop);
     window_remove(self->rgripbottom);
+    window_remove(self->outerleft);
+    window_remove(self->outerright);
+    window_remove(self->outertop);
+    window_remove(self->outerbottom);
+    window_remove(self->outerlefttop);
+    window_remove(self->outerrighttop);
 
     if (self->flash_timer) g_source_remove(self->flash_timer);
 }
@@ -1484,6 +1577,7 @@ ObFrameContext frame_context(ObClient *client, Window win, gint x, gint y)
     if (win == self->handle)            return OB_FRAME_CONTEXT_BOTTOM;
     if (win == self->handletop)         return OB_FRAME_CONTEXT_BOTTOM;
     if (win == self->handlebottom)      return OB_FRAME_CONTEXT_BOTTOM;
+    if (win == self->outerbottom)       return OB_FRAME_CONTEXT_BOTTOM;
     if (win == self->handleleft)        return OB_FRAME_CONTEXT_BLCORNER;
     if (win == self->lgrip)             return OB_FRAME_CONTEXT_BLCORNER;
     if (win == self->lgripleft)         return OB_FRAME_CONTEXT_BLCORNER;
@@ -1502,12 +1596,17 @@ ObFrameContext frame_context(ObClient *client, Window win, gint x, gint y)
     if (win == self->titletopright)     return OB_FRAME_CONTEXT_TRCORNER;
     if (win == self->titletop)          return OB_FRAME_CONTEXT_TOP;
     if (win == self->topresize)         return OB_FRAME_CONTEXT_TOP;
+    if (win == self->outertop)          return OB_FRAME_CONTEXT_TOP;
     if (win == self->tltresize)         return OB_FRAME_CONTEXT_TLCORNER;
     if (win == self->tllresize)         return OB_FRAME_CONTEXT_TLCORNER;
     if (win == self->trtresize)         return OB_FRAME_CONTEXT_TRCORNER;
     if (win == self->trrresize)         return OB_FRAME_CONTEXT_TRCORNER;
     if (win == self->left)              return OB_FRAME_CONTEXT_LEFT;
+    if (win == self->outerleft)         return OB_FRAME_CONTEXT_LEFT;
+    if (win == self->outerlefttop)      return OB_FRAME_CONTEXT_LEFT;
     if (win == self->right)             return OB_FRAME_CONTEXT_RIGHT;
+    if (win == self->outerright)        return OB_FRAME_CONTEXT_RIGHT;
+    if (win == self->outerrighttop)     return OB_FRAME_CONTEXT_RIGHT;
     if (win == self->innertop)          return OB_FRAME_CONTEXT_TITLEBAR;
     if (win == self->innerleft)         return OB_FRAME_CONTEXT_LEFT;
     if (win == self->innerbottom)       return OB_FRAME_CONTEXT_BOTTOM;
diff --git a/openbox/frame.h b/openbox/frame.h
index 915c08d..4f42bd7 100644
--- a/openbox/frame.h
+++ b/openbox/frame.h
@@ -143,6 +143,13 @@ struct _ObFrame
     Window    trtresize;
     Window    trrresize;
 
+    Window    outerleft;
+    Window    outerright;
+    Window    outertop;
+    Window    outerbottom;
+    Window    outerlefttop;
+    Window    outerrighttop;
+
     Colormap  colormap;
 
     gint      icon_on;    /* if the window icon button is on */
@@ -167,6 +174,7 @@ struct _ObFrame
     gint      cbwidth_t;     /* client border width */
     gint      cbwidth_r;     /* client border width */
     gint      cbwidth_b;     /* client border width */
+    gint      outer;         /* width of outer border used for rounded corners */
     gboolean  max_horz;      /* when maxed some decorations are hidden */
     gboolean  max_vert;      /* when maxed some decorations are hidden */
     gboolean  shaded;        /* decorations adjust when shaded */
diff --git a/openbox/framerender.c b/openbox/framerender.c
index 041e6d1..465a05f 100644
--- a/openbox/framerender.c
+++ b/openbox/framerender.c
@@ -43,6 +43,72 @@ void framerender_frame(ObFrame *self)
     self->need_render = FALSE;
 
     {
+        if ((self->decorations & OB_FRAME_DECOR_TITLEBAR) && ob_rr_theme->window_corner_width)
+        {
+            XGCValues xgcv;
+            XWindowAttributes wd_att;
+            XGetWindowAttributes (obt_display, self->window, &wd_att);
+            Pixmap mask = XCreatePixmap (obt_display, self->window, wd_att.width, wd_att.height, 1);
+            GC shape_gc = XCreateGC (obt_display, mask, 0, &xgcv);
+            XSetForeground (obt_display, shape_gc, 1);
+            XFillRectangle (obt_display, mask, shape_gc, 0, 0, wd_att.width, wd_att.height);
+            XSetForeground (obt_display, shape_gc, 0);
+
+            switch (ob_rr_theme->window_corner_width)
+            {
+                case 1 :    XFillRectangle (obt_display, mask, shape_gc, 0, 0, 1, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 1, 1, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, 0, 1, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, wd_att.height - 1, 1, 1);
+                            break;
+
+                case 2 :    XFillRectangle (obt_display, mask, shape_gc, 0, 0, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 2, 0, 2, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, 2, 1, 2);
+
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 2, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 2, wd_att.height - 1, 2, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 4, 1, 2);
+
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 2, 0, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 4, 0, 2, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, 2, 1, 2);
+
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 2, wd_att.height - 2, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 4, wd_att.height - 1, 2, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, wd_att.height - 4, 1, 2);
+                            break;
+
+                case 3 :    XFillRectangle (obt_display, mask, shape_gc, 0, 0, 3, 3);
+                            XFillRectangle (obt_display, mask, shape_gc, 3, 0, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, 3, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 5, 0, 3, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, 5, 1, 3);
+
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 3, 3, 3);
+                            XFillRectangle (obt_display, mask, shape_gc, 3, wd_att.height - 2, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 5, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, 5, wd_att.height - 1, 3, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, 0, wd_att.height - 8, 1, 3);
+
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 3, 0, 3, 3);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 5, 0, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 2, 3, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 8, 0, 3, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, 5, 1, 3);
+
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 3, wd_att.height - 3, 3, 3);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 5, wd_att.height - 2, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 2, wd_att.height - 5, 2, 2);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 8, wd_att.height - 1, 3, 1);
+                            XFillRectangle (obt_display, mask, shape_gc, wd_att.width - 1, wd_att.height - 8, 1, 3);
+                            break;
+            }
+
+            XShapeCombineMask (obt_display, self->window, ShapeBounding, 0, 0, mask, ShapeSet);
+            XFreePixmap (obt_display, mask);
+        }
+
         gulong px;
 
         px = (self->focused ?
@@ -123,6 +189,28 @@ void framerender_frame(ObFrame *self)
 
         XSetWindowBackground(obt_display, self->titlebottom, px);
         XClearWindow(obt_display, self->titlebottom);
+
+        px = (self->focused ?
+            RrColorPixel (ob_rr_theme->window_active_title_bg_color) :
+            RrColorPixel(ob_rr_theme->window_inactive_title_bg_color));
+
+        XSetWindowBackground(obt_display, self->outertop, px);
+        XClearWindow(obt_display, self->outertop);
+        XSetWindowBackground(obt_display, self->outerlefttop, px);
+        XClearWindow(obt_display, self->outerlefttop);
+        XSetWindowBackground(obt_display, self->outerrighttop, px);
+        XClearWindow(obt_display, self->outerrighttop);
+
+        px = (self->focused ?
+              RrColorPixel(ob_rr_theme->cb_focused_color) :
+              RrColorPixel(ob_rr_theme->cb_unfocused_color));
+
+        XSetWindowBackground(obt_display, self->outerleft, px);
+        XClearWindow(obt_display, self->outerleft);
+        XSetWindowBackground(obt_display, self->outerright, px);
+        XClearWindow(obt_display, self->outerright);
+        XSetWindowBackground(obt_display, self->outerbottom, px);
+        XClearWindow(obt_display, self->outerbottom);
     }
 
     if (self->decorations & OB_FRAME_DECOR_TITLEBAR) {
